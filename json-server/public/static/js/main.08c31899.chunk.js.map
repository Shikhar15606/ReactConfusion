{"version":3,"sources":["components/LoadingComponent.js","shared/baseUrl.js","components/MenuComponent.js","components/DishdetailComponent.js","components/HeaderComponent.js","components/FooterComponent.js","components/HomeComponent.js","components/ContactComponent.js","components/AboutComponent.js","redux/ActionCreators.js","redux/ActionTypes.js","components/MainComponent.js","redux/dishes.js","redux/comments.js","redux/promotions.js","redux/leaders.js","redux/forms.js","App.js","redux/configureStore.js","serviceWorker.js","index.js"],"names":["Loading","className","baseUrl","RenderMenuItem","dish","onClick","Card","to","id","CardImg","width","src","image","alt","name","CardImgOverlay","CardTitle","Menu","props","menu","dishes","map","key","isLoading","errMess","Breadcrumb","BreadcrumbItem","active","required","val","length","maxLength","len","RenderDish","in","transformProps","exitTransform","top","CardBody","CardText","description","RenderComments","comments","postComment","dishId","comment","author","Intl","DateTimeFormat","year","month","day","format","Date","parse","date","CommentForm","toggleModal","bind","handleSubmit","state","isNavOpen","isModalOpen","this","setState","values","rating","Fragment","Button","outline","color","class","aria-hidden","Modal","isOpen","toggle","ModalHeader","ModalBody","onSubmit","Label","htmlFor","Row","Col","select","model","text","placeholder","validators","minLength","show","messages","textarea","rows","type","Component","DishDetail","Header","toggleNav","handleLogin","event","alert","username","value","password","remember","checked","preventDefault","Navbar","dark","expand","NavbarToggler","NavbarBrand","href","height","Collapse","navbar","Nav","NavItem","Jumbotron","Form","FormGroup","Input","innerRef","input","check","Footer","RenderCard","item","designation","CardSubtitle","Home","dishesLoading","dishesErrMess","promotion","promoLoading","promoErrMess","leader","leaderLoading","leaderErrMess","isNumber","isNaN","Number","validEmail","test","Contact","postFeedback","firstname","lastname","telnum","email","agree","contactType","message","resetFeedbackForm","role","md","size","offset","checkbox","RenderLeader","leaders","Media","left","object","body","heading","About","CardHeader","title","list","dishesFailed","errmess","payload","addDishes","commentsFailed","addComments","promosLoading","promosFailed","addPromos","promos","leadersLoading","leadersFailed","addLeaders","Main","selectedDish","fetchDishes","fetchComments","fetchPromos","fetchLeaders","TransitionGroup","CSSTransition","location","classNames","timeout","path","component","filter","featured","dishErrMess","promotions","promo","exact","match","parseInt","params","commentsErrMess","withRouter","connect","dispatch","newComment","toISOString","fetch","method","JSON","stringify","headers","credentials","then","response","ok","error","Error","status","statusText","json","addComment","catch","console","log","actions","reset","newFeedback","Dishes","action","Comments","concat","Promotions","Leaders","InitialFeedback","store","createStore","combineReducers","createForms","feedback","applyMiddleware","thunk","logger","App","Boolean","window","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.08c31899.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport const Loading = () => {\r\n    return(\r\n        <div className=\"col-12\">\r\n            <span className=\"fa fa-spinner fa-pulse fa-3x fa-fw text-primary\"></span>\r\n            <p>Loading . . .</p>\r\n        </div>\r\n    );\r\n};","export const baseUrl = 'http://localhost:3001/';","import React from 'react';\r\nimport { Loading } from './LoadingComponent';\r\nimport { Card, CardImg, CardImgOverlay,\r\n    CardTitle, Breadcrumb, BreadcrumbItem, } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { baseUrl } from '../shared/baseUrl';\r\n\r\n\r\nfunction RenderMenuItem ({dish, onClick}) {\r\n    return (\r\n        <Card>\r\n            <Link to={`/menu/${dish.id}`} >\r\n            <CardImg width=\"100%\" src={baseUrl + dish.image} alt={dish.name} />\r\n                <CardImgOverlay>\r\n                    <CardTitle>{dish.name}</CardTitle>\r\n                </CardImgOverlay>\r\n            </Link>\r\n        </Card>\r\n    );\r\n}\r\n\r\n    const Menu = (props) => {\r\n\r\n        const menu = props.dishes.dishes.map((dish) => {\r\n            return (\r\n                <div className=\"col-12 col-md-5 m-1\"  key={dish.id}>\r\n                    <RenderMenuItem dish={dish} />\r\n                </div>\r\n            );\r\n        });\r\n        \r\n        if (props.dishes.isLoading) {\r\n            return(\r\n                <div className=\"container\">\r\n                    <div className=\"row\">            \r\n                        <Loading />\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        else if (props.dishes.errMess) {\r\n            return(\r\n                <div className=\"container\">\r\n                    <div className=\"row\"> \r\n                        <div className=\"col-12\">\r\n                            <h4>{props.dishes.errMess}</h4>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        else\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>Menu</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>Menu</h3>\r\n                        <hr />\r\n                    </div>                \r\n                </div>\r\n                <div className=\"row\">\r\n                    {menu}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\nexport default Menu;","import React from 'react';\r\nimport {\r\n    Card, CardImg, CardText, CardBody,\r\n    CardTitle, Breadcrumb, BreadcrumbItem, Button,\r\n    Modal, ModalHeader, ModalBody, Label, Row, Col\r\n} from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Component } from 'react';\r\nimport { Control, LocalForm, Errors } from 'react-redux-form';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport { FadeTransform, Fade, Stagger } from 'react-animation-components';\r\n\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => val && (val.length >= len);\r\nfunction RenderDish({ dish }) {\r\n    if (dish != null)\r\n        return (\r\n            <FadeTransform\r\n                in\r\n                transformProps={{\r\n                    exitTransform: 'scale(0.5) translateY(-50%)'\r\n                }}>\r\n            <Card>\r\n                <CardImg top src={baseUrl + dish.image} alt={dish.name} />\r\n                <CardBody>\r\n                    <CardTitle>{dish.name}</CardTitle>\r\n                    <CardText>{dish.description}</CardText>\r\n                </CardBody>\r\n            </Card>\r\n            </FadeTransform>\r\n        );\r\n    else\r\n        return (\r\n            <div></div>\r\n        );\r\n\r\n}\r\nfunction RenderComments({comments, postComment, dishId}) {\r\n    if (comments != null) {\r\n        return (\r\n            <div>\r\n                <h4>Comments</h4>\r\n                <div>\r\n                <Stagger in>\r\n                {comments.map((comment) => {\r\n            return (\r\n                    <Fade in>\r\n                <li key={comment.id} className=\"list-unstyled\">\r\n                    <p>{comment.comment}</p>\r\n                    <p>-- {comment.author}, {new Intl.DateTimeFormat('en-US', { year: 'numeric', month: 'short', day: '2-digit' }).format(new Date(Date.parse(comment.date)))}</p>\r\n                </li>\r\n                </Fade>\r\n            )\r\n        })}\r\n                </Stagger>\r\n                </div>\r\n                <CommentForm dishId={dishId} postComment={postComment} />\r\n            </div>\r\n        );\r\n    }\r\n    else {\r\n        return (\r\n            <div></div>\r\n        );\r\n    }\r\n}\r\nconst DishDetail = (props) => {\r\n    if (props.isLoading) {\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">            \r\n                    <Loading />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else if (props.errMess) {\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">            \r\n                    <h4>{props.errMess}</h4>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else if (props.dish != null)\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <Breadcrumb>\r\n                    <BreadcrumbItem><Link to=\"/menu\">Menu</Link></BreadcrumbItem>\r\n                    <BreadcrumbItem active>{props.dish.name}</BreadcrumbItem>\r\n                </Breadcrumb>\r\n                <div className=\"col-12\">\r\n                    <h3>{props.dish.name}</h3>\r\n                    <hr />\r\n                </div>\r\n            </div>\r\n            <div className=\"row\">\r\n                <div className=\"col-12 col-md-5 m-1\">\r\n                    <RenderDish dish={props.dish} />\r\n                </div>\r\n                <div className=\"col-12 col-md-5 m-1\">\r\n                    <RenderComments comments={props.comments} postComment={props.postComment} dishId={props.dish.id} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nclass CommentForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.state = {\r\n            isNavOpen: false,\r\n            isModalOpen: false\r\n        };\r\n    }\r\n    toggleModal() {\r\n        this.setState({\r\n            isModalOpen: !this.state.isModalOpen\r\n        });\r\n    }\r\n    handleSubmit(values) {\r\n        this.toggleModal();\r\n        this.props.postComment(this.props.dishId, values.rating, values.author, values.comment);\r\n    }\r\n    render() {\r\n        return (\r\n            <React.Fragment><Button outline color=\"secondary\" onClick={this.toggleModal}><span class=\"fa fa-pencil\" aria-hidden=\"true\"></span> Submit Comment</Button>{''}\r\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                    <ModalHeader toggle={this.toggleModal}>Submit Comment</ModalHeader>\r\n                    <ModalBody>\r\n                        <LocalForm onSubmit={(values) => this.handleSubmit(values)}>\r\n                            <Label htmlFor=\"yourname\"> Rating </Label>\r\n                            <Row>\r\n                                <Col>\r\n                                    <Control.select model=\".rating\" id=\"rating\" name=\"rating\" className=\"form-control\">\r\n                                        <option >1</option>\r\n                                        <option >2</option>\r\n                                        <option >3</option>\r\n                                        <option >4</option>\r\n                                        <option >5</option>\r\n                                    </Control.select>\r\n                                </Col>\r\n                            </Row>\r\n                            <Label htmlFor=\"author\">Your Name</Label>\r\n                            <Row>\r\n                                <Col>\r\n                                    <Control.text model=\".author\" id=\"author\" name=\"author\"\r\n                                        placeholder=\"Your Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                        }}\r\n                                    />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".author\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required ',\r\n                                            minLength: 'Must be greater than 2 characters ',\r\n                                            maxLength: 'Must be 15 characters or less '\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Label htmlFor=\"comment\">Comment</Label>\r\n                            <Row className=\"form-group\">\r\n                                <Col>\r\n                                    <Control.textarea model=\".comment\" id=\"comment\" name=\"comment\" rows=\"6\"\r\n                                        className=\"form-control\">\r\n                                    </Control.textarea>\r\n                                </Col>\r\n                            </Row>\r\n\r\n                            <Row className=\"form-group\">\r\n                                <Col>\r\n                                    <Button type=\"submit\" color=\"primary\">\r\n                                        Submit\r\n                                    </Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </LocalForm>\r\n                    </ModalBody>\r\n                </Modal>\r\n            </React.Fragment>\r\n\r\n        );\r\n    }\r\n\r\n}\r\nexport default DishDetail;","import {\r\n  Navbar, NavbarBrand, Nav, NavbarToggler, Collapse, NavItem, Jumbotron,\r\n  Button, Modal, ModalHeader, ModalBody,\r\n  Form, FormGroup, Input, Label\r\n} from 'reactstrap';\r\nimport { NavLink } from 'react-router-dom';\r\nimport React, { Component } from 'react'\r\n\r\nclass Header extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.toggleNav = this.toggleNav.bind(this);\r\n    this.toggleModal = this.toggleModal.bind(this);\r\n    this.handleLogin = this.handleLogin.bind(this);\r\n    this.state = {\r\n      isNavOpen: false,\r\n      isModalOpen: false\r\n    };\r\n  }\r\n\r\n  toggleNav() {\r\n    this.setState({\r\n      isNavOpen: !this.state.isNavOpen\r\n    });\r\n  }\r\n\r\n  toggleModal() {\r\n    this.setState({\r\n      isModalOpen: !this.state.isModalOpen\r\n    });\r\n  }\r\n  handleLogin(event) {\r\n    this.toggleModal();\r\n    alert(\"Username: \" + this.username.value + \" Password: \" + this.password.value\r\n      + \" Remember: \" + this.remember.checked);\r\n    event.preventDefault();\r\n\r\n  }\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <Navbar dark expand=\"md\">\r\n          <div className=\"container\">\r\n            <NavbarToggler onClick={this.toggleNav} />\r\n            <NavbarBrand className=\"mr-auto\" href=\"/\"><img src='assets/images/logo.png' height=\"30\" width=\"41\" alt='Ristorante Con Fusion' /></NavbarBrand>\r\n            <Collapse isOpen={this.state.isNavOpen} navbar>\r\n              <Nav navbar>\r\n                <NavItem>\r\n                  <NavLink className=\"nav-link\" to='/home'><span className=\"fa fa-home fa-lg\"></span> Home</NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                  <NavLink className=\"nav-link\" to='/aboutus'><span className=\"fa fa-info fa-lg\"></span> About Us</NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                  <NavLink className=\"nav-link\" to='/menu'><span className=\"fa fa-list fa-lg\"></span> Menu</NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                  <NavLink className=\"nav-link\" to='/contactus'><span className=\"fa fa-address-card fa-lg\"></span> Contact Us</NavLink>\r\n                </NavItem>\r\n              </Nav>\r\n            </Collapse>\r\n          </div>\r\n          <Nav className=\"ml-auto\" navbar>\r\n            <NavItem>\r\n              <Button outline onClick={this.toggleModal}><span className=\"fa fa-sign-in fa-lg\"></span> Login</Button>\r\n            </NavItem>\r\n          </Nav>\r\n        </Navbar>\r\n        <Jumbotron>\r\n          <div className=\"container\">\r\n            <div className=\"row row-header\">\r\n              <div className=\"col-12 col-sm-6\">\r\n                <h1>Ristorante con Fusion</h1>\r\n                <p>We take inspiration from the World's best cuisines, and create a unique fusion experience. Our lipsmacking creations will tickle your culinary senses!</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Jumbotron>\r\n        <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n          <ModalHeader toggle={this.toggleModal}>Login</ModalHeader>\r\n          <ModalBody>\r\n            <Form onSubmit={this.handleLogin}>\r\n              <FormGroup>\r\n                <Label htmlFor=\"username\">Username</Label>\r\n                <Input type=\"text\" id=\"username\" name=\"username\"\r\n                  innerRef={(input) => this.username = input} />\r\n              </FormGroup>\r\n              <FormGroup>\r\n                <Label htmlFor=\"password\">Password</Label>\r\n                <Input type=\"password\" id=\"password\" name=\"password\"\r\n                  innerRef={(input) => this.password = input} />\r\n              </FormGroup>\r\n              <FormGroup check>\r\n                <Label check>\r\n                  <Input type=\"checkbox\" name=\"remember\"\r\n                    innerRef={(input) => this.remember = input} />\r\n                                    Remember me\r\n                                </Label>\r\n              </FormGroup>\r\n              <Button type=\"submit\" value=\"submit\" color=\"primary\">Login</Button>\r\n            </Form>\r\n          </ModalBody>\r\n        </Modal>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\nexport default Header;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Footer(props) {\r\n    return (\r\n        <div className=\"footer\">\r\n            <div className=\"container\">\r\n                <div className=\"row justify-content-center\">\r\n                    <div className=\"col-4 offset-1 col-sm-2\">\r\n                        <h5>Links</h5>\r\n                        <ul className=\"list-unstyled\">\r\n                            <li><Link to='/home'>Home</Link></li>\r\n                            <li><Link to='/aboutus'>About Us</Link></li>\r\n                            <li><Link to='/menu'>Menu</Link></li>\r\n                            <li><Link to='/contactus'>Contact Us</Link></li>\r\n                        </ul>\r\n                    </div>\r\n                    <div className=\"col-7 col-sm-5\">\r\n                        <h5>Our Address</h5>\r\n                        <address>\r\n                            121, Clear Water Bay Road<br />\r\n\t\t              Clear Water Bay, Kowloon<br />\r\n\t\t              HONG KONG<br />\r\n                            <i className=\"fa fa-phone fa-lg\"></i>: +852 1234 5678<br />\r\n                            <i className=\"fa fa-fax fa-lg\"></i>: +852 8765 4321<br />\r\n                            <i className=\"fa fa-envelope fa-lg\"></i>: <a href=\"mailto:confusion@food.net\">\r\n                                confusion@food.net</a>\r\n                        </address>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-4 align-self-center\">\r\n                        <div className=\"text-center\">\r\n                            <a className=\"btn btn-social-icon btn-google\" href=\"http://google.com/+\"><i className=\"fa fa-google-plus\"></i></a>\r\n                            <a className=\"btn btn-social-icon btn-facebook\" href=\"http://www.facebook.com/profile.php?id=\"><i className=\"fa fa-facebook\"></i></a>\r\n                            <a className=\"btn btn-social-icon btn-linkedin\" href=\"http://www.linkedin.com/in/\"><i className=\"fa fa-linkedin\"></i></a>\r\n                            <a className=\"btn btn-social-icon btn-twitter\" href=\"http://twitter.com/\"><i className=\"fa fa-twitter\"></i></a>\r\n                            <a className=\"btn btn-social-icon btn-google\" href=\"http://youtube.com/\"><i className=\"fa fa-youtube\"></i></a>\r\n                            <a className=\"btn btn-social-icon\" href=\"mailto:\"><i className=\"fa fa-envelope-o\"></i></a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row justify-content-center\">\r\n                    <div className=\"col-auto\">\r\n                        <p>© Copyright 2018 Ristorante Con Fusion</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\nimport { Loading } from './LoadingComponent';\r\nimport {\r\n    Card, CardImg, CardText, CardBody,\r\n    CardTitle, CardSubtitle\r\n} from 'reactstrap';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport { FadeTransform } from 'react-animation-components';\r\n\r\nfunction RenderCard({ item, isLoading, errMess }) {\r\n\r\n    if (isLoading) {\r\n        return (\r\n            <Loading />\r\n        );\r\n    }\r\n    else if (errMess) {\r\n        return (\r\n            <h4>{errMess}</h4>\r\n        );\r\n    }\r\n    else\r\n        return (\r\n            <FadeTransform in\r\n                transformProps={{\r\n                    exitTransform: 'scale(0.5) translateY(-50%)'\r\n                }}>\r\n                <Card>\r\n                    <CardImg src={baseUrl + item.image} alt={item.name} />\r\n                    <CardBody>\r\n                    <CardTitle>{item.name}</CardTitle>\r\n                    {item.designation ? <CardSubtitle>{item.designation}</CardSubtitle> : null }\r\n                    <CardText>{item.description}</CardText>\r\n                    </CardBody>\r\n                </Card>\r\n            </FadeTransform>\r\n        );\r\n\r\n}\r\n\r\nfunction Home(props) {\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row align-items-start\">\r\n\r\n                <div className=\"col-12 col-md m-1\">\r\n                    <RenderCard item={props.dish} isLoading={props.dishesLoading} errMess={props.dishesErrMess} />\r\n                </div>\r\n                <div className=\"col-12 col-md m-1\">\r\n                <RenderCard item={props.promotion} isLoading={props.promoLoading} errMess={props.promoErrMess} />\r\n                </div>\r\n                <div className=\"col-12 col-md m-1\">\r\n                <RenderCard item={props.leader} isLoading={props.leaderLoading} errMess={props.leaderErrMess} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Home;","import { Link } from 'react-router-dom';\r\nimport React, { Component } from 'react';\r\nimport {\r\n    Breadcrumb, BreadcrumbItem,\r\n    Button, Row, Col, Label\r\n} from 'reactstrap';\r\nimport { Control, Form, Errors, actions } from 'react-redux-form';\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => val && (val.length >= len);\r\nconst isNumber = (val) => !isNaN(Number(val));\r\nconst validEmail = (val) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\r\nclass Contact extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    };\r\n    handleSubmit(values) {\r\n        this.props.postFeedback( values.firstname, values.lastname, values.telnum, values.email, values.agree, values.contactType, values.message);\r\n        this.props.resetFeedbackForm();\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>Contact Us</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>Contact Us</h3>\r\n                        <hr />\r\n                    </div>\r\n                </div>\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                        <h3>Location Information</h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-4 offset-sm-1\">\r\n                        <h5>Our Address</h5>\r\n                        <address>\r\n                            121, Clear Water Bay Road<br />\r\n                                        Clear Water Bay, Kowloon<br />\r\n                                        HONG KONG<br />\r\n                            <i className=\"fa fa-phone\"></i>: +852 1234 5678<br />\r\n                            <i className=\"fa fa-fax\"></i>: +852 8765 4321<br />\r\n                            <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\r\n                        </address>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-6 offset-sm-1\">\r\n                        <h5>Map of our Location</h5>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-11 offset-sm-1\">\r\n                        <div className=\"btn-group\" role=\"group\">\r\n                            <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+85212345678\"><i className=\"fa fa-phone\"></i> Call</a>\r\n                            <a role=\"button\" className=\"btn btn-info\"><i className=\"fa fa-skype\"></i> Skype</a>\r\n                            <a role=\"button\" className=\"btn btn-success\" href=\"mailto:confusion@food.net\"><i className=\"fa fa-envelope-o\"></i> Email</a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                        <h3>Send us your Feedback</h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-md-9\">\r\n                        <Form model=\"feedback\" onSubmit={(values) => this.handleSubmit(values)}>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"firstname\" md={2}>First Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".firstname\" id=\"firstname\" name=\"firstname\"\r\n                                        placeholder=\"First Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                        }}\r\n                                    />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".firstname\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"lastname\" md={2}>Last Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".lastname\" id=\"lastname\" name=\"lastname\"\r\n                                        placeholder=\"Last Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                        }}\r\n                                    />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".lastname\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"telnum\" md={2}>Contact Tel.</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".telnum\" id=\"telnum\" name=\"telnum\"\r\n                                        placeholder=\"Tel. Number\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15), isNumber\r\n                                        }}\r\n                                    />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".telnum\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 numbers',\r\n                                            maxLength: 'Must be 15 numbers or less',\r\n                                            isNumber: 'Must be a number'\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"email\" md={2}>Email</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".email\" id=\"email\" name=\"email\"\r\n                                        placeholder=\"Email\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, validEmail\r\n                                        }}\r\n                                    />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".email\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            validEmail: 'Invalid Email Address'\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{ size: 6, offset: 2 }}>\r\n                                    <div className=\"form-check\">\r\n                                        <Label check>\r\n                                            <Control.checkbox model=\".agree\" name=\"agree\"\r\n                                                className=\"form-check-input\"\r\n                                            /> {' '}\r\n                                            <strong>May we contact you?</strong>\r\n                                        </Label>\r\n                                    </div>\r\n                                </Col>\r\n                                <Col md={{ size: 3, offset: 1 }}>\r\n                                    <Control.select model=\".contactType\" name=\"contactType\"\r\n                                        className=\"form-control\">\r\n                                        <option>Tel.</option>\r\n                                        <option>Email</option>\r\n                                    </Control.select>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"message\" md={2}>Your Feedback</Label>\r\n                                <Col md={10}>\r\n                                    <Control.textarea model=\".message\" id=\"message\" name=\"message\"\r\n                                        rows=\"12\"\r\n                                        className=\"form-control\" />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{ size: 10, offset: 2 }}>\r\n                                    <Button type=\"submit\" color=\"primary\">\r\n                                        Send Feedback\r\n                                    </Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </Form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Contact;","import React from 'react';\r\nimport { Breadcrumb, BreadcrumbItem, Card, CardBody, CardHeader, Media } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport { Fade, Stagger } from 'react-animation-components';\r\n\r\nfunction About(props) {\r\n    const leaders = props.leaders.leaders.map((leader) => {\r\n        return (\r\n            <React.Fragment>\r\n                <Media className=\"my-5\">\r\n                    <Media image left >\r\n                        <Media object src={baseUrl + leader.image} alt={leader.name} />\r\n                    </Media>\r\n                    <Media body className=\"mx-5 mb-3\">\r\n                        <Media heading>\r\n                            {leader.name}\r\n                        </Media>\r\n                        <h6>{leader.designation}</h6>\r\n                        <p>{leader.description}</p>\r\n                    </Media>\r\n                </Media>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n    )\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <Breadcrumb>\r\n                    <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                    <BreadcrumbItem active>About Us</BreadcrumbItem>\r\n                </Breadcrumb>\r\n                <div className=\"col-12\">\r\n                    <h3>About Us</h3>\r\n                    <hr />\r\n                </div>\r\n            </div>\r\n            <div className=\"row row-content\">\r\n                <div className=\"col-12 col-md-6\">\r\n                    <h2>Our History</h2>\r\n                    <p>Started in 2010, Ristorante con Fusion quickly established itself as a culinary icon par excellence in Hong Kong. With its unique brand of world fusion cuisine that can be found nowhere else, it enjoys patronage from the A-list clientele in Hong Kong.  Featuring four of the best three-star Michelin chefs in the world, you never know what will arrive on your plate the next time you visit us.</p>\r\n                    <p>The restaurant traces its humble beginnings to <em>The Frying Pan</em>, a successful chain started by our CEO, Mr. Peter Pan, that featured for the first time the world's best cuisines in a pan.</p>\r\n                </div>\r\n                <div className=\"col-12 col-md-5\">\r\n                    <Card>\r\n                        <CardHeader className=\"bg-primary text-white\">Facts At a Glance</CardHeader>\r\n                        <CardBody>\r\n                            <dl className=\"row p-1\">\r\n                                <dt className=\"col-6\">Started</dt>\r\n                                <dd className=\"col-6\">3 Feb. 2013</dd>\r\n                                <dt className=\"col-6\">Major Stake Holder</dt>\r\n                                <dd className=\"col-6\">HK Fine Foods Inc.</dd>\r\n                                <dt className=\"col-6\">Last Year's Turnover</dt>\r\n                                <dd className=\"col-6\">$1,250,375</dd>\r\n                                <dt className=\"col-6\">Employees</dt>\r\n                                <dd className=\"col-6\">40</dd>\r\n                            </dl>\r\n                        </CardBody>\r\n                    </Card>\r\n                </div>\r\n                <div className=\"col-12\">\r\n                    <Card>\r\n                        <CardBody className=\"bg-faded\">\r\n                            <blockquote className=\"blockquote\">\r\n                                <p className=\"mb-0\">You better cut the pizza in four pieces because\r\n                                    I'm not hungry enough to eat six.</p>\r\n                                <footer className=\"blockquote-footer\">Yogi Berra,\r\n                                <cite title=\"Source Title\">The Wit and Wisdom of Yogi Berra,\r\n                                    P. Pepe, Diversion Books, 2014</cite>\r\n                                </footer>\r\n                            </blockquote>\r\n                        </CardBody>\r\n                    </Card>\r\n                </div>\r\n            </div>\r\n            <div className=\"row row-content\">\r\n                <div className=\"col-12\">\r\n                    <h2>Corporate Leadership</h2>\r\n                </div>\r\n                <div className=\"col-12\">\r\n                    <Media list>\r\n                        <RenderLeader leaders={leaders} props={props} />\r\n                    </Media>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction RenderLeader(props) {\r\n    if (props.props.leaders.isLoading) {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Loading />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else if (props.props.leaders.errMess) {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-12\">\r\n                        <h4>{props.props.leaders.errMess}</h4>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else\r\n        return (\r\n            <React.Fragment>\r\n                <Stagger in>\r\n                    {props.props.leaders.leaders.map((leader) => {\r\n        return (\r\n            <Fade in>\r\n                        <React.Fragment>\r\n                            <Media className=\"my-5\">\r\n                                <Media image left >\r\n                                    <Media object src={baseUrl + leader.image} alt={leader.name} />\r\n                                </Media>\r\n                                <Media body className=\"mx-5 mb-3\">\r\n                                    <Media heading>\r\n                                        {leader.name}\r\n                                    </Media>\r\n                                    <h6>{leader.designation}</h6>\r\n                                    <p>{leader.description}</p>\r\n                                </Media>\r\n                            </Media>\r\n                        </React.Fragment>\r\n                    </Fade>\r\n        );\r\n}\r\n    )}\r\n</Stagger>\r\n            </React.Fragment>\r\n        )\r\n}\r\n\r\nexport default About;    ","import * as ActionTypes from './ActionTypes';\r\nimport { baseUrl } from '../shared/baseUrl';\r\n\r\nexport const addComment = (comment) => ({\r\n    type: ActionTypes.ADD_COMMENT,\r\n    payload: comment\r\n});\r\n\r\nexport const postComment = (dishId, rating, author, comment) => (dispatch) => {\r\n\r\n    const newComment = {\r\n        dishId: dishId,\r\n        rating: rating,\r\n        author: author,\r\n        comment: comment\r\n    };\r\n    newComment.date = new Date().toISOString();\r\n    \r\n    return fetch(baseUrl + 'comments', {\r\n        method: \"POST\",\r\n        body: JSON.stringify(newComment),\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        credentials: \"same-origin\"\r\n    })\r\n    .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n            throw error;\r\n      })\r\n    .then(response => response.json())\r\n    .then(response => dispatch(addComment(response)))\r\n    .catch(error =>  { console.log('post comments', error.message); alert('Your comment could not be posted\\nError: '+error.message); });\r\n};\r\nexport const addFeedback = (feedback) => ({\r\n    type: ActionTypes.ADD_FEEDBACK,\r\n    payload: feedback\r\n});\r\n\r\nexport const postFeedback = (firstname,lastname,telnum,email,agree,contactType,message) => (dispatch) => {\r\n\r\n    const newFeedback = {\r\n        firstname:firstname,\r\n        lastname:lastname,\r\n        telnum:telnum,\r\n        email:email,\r\n        agree:agree,\r\n        contactType:contactType,\r\n        message:message\r\n    };\r\n    \r\n    return fetch(baseUrl + 'feedback', {\r\n        method: \"POST\",\r\n        body: JSON.stringify(newFeedback),\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        credentials: \"same-origin\"\r\n    })\r\n    .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n            throw error;\r\n      })\r\n      .then(response => response.json())\r\n      .then(response => dispatch(addFeedback(response)))\r\n      .then(response => alert('Thank you for your feedback!\\n' + JSON.stringify(response)))\r\n      .catch(error =>  { console.log('post feedback', error.message); alert('Your feedback could not be posted\\nError: '+error.message); });\r\n};\r\n\r\nexport const fetchDishes = () => (dispatch) => {\r\n\r\n    dispatch(dishesLoading(true));\r\n\r\n    return fetch(baseUrl + 'dishes')\r\n    .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n      })\r\n    .then(response => response.json())\r\n    .then(dishes => dispatch(addDishes(dishes)))\r\n    .catch(error => dispatch(dishesFailed(error.message)));\r\n}\r\n\r\nexport const dishesLoading = () => ({\r\n    type: ActionTypes.DISHES_LOADING\r\n});\r\n\r\nexport const dishesFailed = (errmess) => ({\r\n    type: ActionTypes.DISHES_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addDishes = (dishes) => ({\r\n    type: ActionTypes.ADD_DISHES,\r\n    payload: dishes\r\n});\r\n\r\nexport const fetchComments = () => (dispatch) => {    \r\n    return fetch(baseUrl + 'comments')\r\n    .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n      })\r\n    .then(response => response.json())\r\n    .then(comments => dispatch(addComments(comments)))\r\n    .catch(error => dispatch(commentsFailed(error.message)));\r\n};\r\n\r\nexport const commentsFailed = (errmess) => ({\r\n    type: ActionTypes.COMMENTS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addComments = (comments) => ({\r\n    type: ActionTypes.ADD_COMMENTS,\r\n    payload: comments\r\n});\r\n\r\nexport const fetchPromos = () => (dispatch) => {\r\n    \r\n    dispatch(promosLoading());\r\n\r\n    return fetch(baseUrl + 'promotions')\r\n    .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n      })\r\n    .then(response => response.json())\r\n    .then(promos => dispatch(addPromos(promos)))\r\n    .catch(error => dispatch(promosFailed(error.message)));\r\n}\r\n\r\nexport const promosLoading = () => ({\r\n    type: ActionTypes.PROMOS_LOADING\r\n});\r\n\r\nexport const promosFailed = (errmess) => ({\r\n    type: ActionTypes.PROMOS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addPromos = (promos) => ({\r\n    type: ActionTypes.ADD_PROMOS,\r\n    payload: promos\r\n});\r\n\r\nexport const fetchLeaders = () => (dispatch) => {\r\n    \r\n    dispatch(leadersLoading());\r\n\r\n    return fetch(baseUrl + 'leaders')\r\n    .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n      })\r\n    .then(response => response.json())\r\n    .then(leaders => dispatch(addLeaders(leaders)))\r\n    .catch(error => dispatch(leadersFailed(error.message)));\r\n}\r\n\r\nexport const leadersLoading = () => ({\r\n    type: ActionTypes.LEADERS_LOADING\r\n});\r\n\r\nexport const leadersFailed = (errmess) => ({\r\n    type: ActionTypes.LEADERS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addLeaders = (promos) => ({\r\n    type: ActionTypes.ADD_LEADERS,\r\n    payload: promos\r\n});\r\n\r\n","export const ADD_COMMENT ='ADD_COMMENT';\r\nexport const ADD_FEEDBACK ='ADD_FEEDBACK';\r\n\r\nexport const DISHES_LOADING = 'DISHES_LOADING';\r\nexport const DISHES_FAILED = 'DISHES_FAILED';\r\nexport const ADD_DISHES = 'ADD_DISHES';\r\n\r\nexport const ADD_COMMENTS = 'ADD_COMMENTS';\r\nexport const COMMENTS_FAILED = 'COMMENTS_FAILED';\r\n\r\nexport const PROMOS_LOADING = 'PROMOS_LOADING';\r\nexport const ADD_PROMOS = 'ADD_PROMOS';\r\nexport const PROMOS_FAILED = 'PROMOS_FAILED';\r\n\r\nexport const LEADERS_LOADING = 'LEADERS_LOADING';\r\nexport const LEADERS_FAILED = 'LEADERS_FAILED';\r\nexport const ADD_LEADERS = 'ADD_LEADERS';","import React, { Component } from 'react';\r\nimport Menu from './MenuComponent';\r\nimport DishDetail from './DishdetailComponent';\r\nimport Header from './HeaderComponent';\r\nimport Footer from './FooterComponent';\r\nimport Home from './HomeComponent';\r\nimport Contact from './ContactComponent';\r\nimport About from './AboutComponent';\r\nimport { Switch, Route, Redirect, withRouter } from 'react-router-dom'\r\nimport { connect } from 'react-redux';\r\nimport { actions } from 'react-redux-form';\r\nimport { postComment, fetchDishes, fetchComments, fetchPromos, fetchLeaders, postFeedback } from '../redux/ActionCreators';\r\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    dishes: state.dishes,\r\n    comments: state.comments,\r\n    promotions: state.promotions,\r\n    leaders: state.leaders\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  postComment: (dishId, rating, author, comment) => dispatch(postComment(dishId, rating, author, comment)),\r\n  fetchDishes: () => { dispatch(fetchDishes())},\r\n  resetFeedbackForm: () => { dispatch(actions.reset('feedback'))},\r\n  fetchComments: () => dispatch(fetchComments()),\r\n  fetchPromos: () => dispatch(fetchPromos()),\r\n  fetchLeaders: () => dispatch(fetchLeaders()),\r\n  postFeedback:(firstname,lastname,telnum,email,agree,contactType,message,date) => dispatch(postFeedback(firstname,lastname,telnum,email,agree,contactType,message))\r\n});\r\n\r\nclass Main extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  onDishSelect(dishId) {\r\n    this.setState({ selectedDish: dishId });\r\n  }\r\n  componentDidMount() {\r\n    this.props.fetchDishes();\r\n    this.props.fetchComments();\r\n    this.props.fetchPromos();\r\n    this.props.fetchLeaders();\r\n\r\n  }\r\n  render() {\r\n    const HomePage = () => {\r\n      return (\r\n        <Home \r\n              dish={this.props.dishes.dishes.filter((dish) => dish.featured)[0]}\r\n              dishesLoading={this.props.dishes.isLoading}\r\n              dishErrMess={this.props.dishes.errMess}\r\n              promotion={this.props.promotions.promotions.filter((promo) => promo.featured)[0]}\r\n              promoLoading={this.props.promotions.isLoading}\r\n              promoErrMess={this.props.promotions.errMess}\r\n              leader={this.props.leaders.leaders.filter((leader) => leader.featured)[0]}\r\n              leaderLoading={this.props.leaders.isLoading}\r\n              leaderErrMess={this.props.leaders.errMess}\r\n          />\r\n      );\r\n    }\r\n\r\n    const DishWithId = ({match}) => {\r\n      return(\r\n        <DishDetail dish={this.props.dishes.dishes.filter((dish) => dish.id === parseInt(match.params.dishId,10))[0]}\r\n        isLoading={this.props.dishes.isLoading}\r\n        errMess={this.props.dishes.errMess}\r\n        comments={this.props.comments.comments.filter((comment) => comment.dishId === parseInt(match.params.dishId,10))}\r\n        commentsErrMess={this.props.comments.errMess}\r\n        postComment={this.props.postComment}\r\n      />\r\n      );\r\n    };\r\n\r\n    return (\r\n      <div>\r\n        <Header />\r\n        <div>\r\n        <TransitionGroup>\r\n            <CSSTransition key={this.props.location.key} classNames=\"page\" timeout={300}>\r\n              <Switch location={this.props.location}>\r\n                  <Route path='/home' component={HomePage} />\r\n                  <Route exact path='/aboutus' component={() => <About leaders={this.props.leaders} />} />} />\r\n                  <Route exact path='/menu' component={() => <Menu dishes={this.props.dishes} />} />\r\n                  <Route path='/menu/:dishId' component={DishWithId} />\r\n                  <Route exact path='/contactus' component={() => <Contact postFeedback={this.props.postFeedback}  resetFeedbackForm={this.props.resetFeedbackForm} />} />\r\n                  <Redirect to=\"/home\" />\r\n              </Switch>\r\n            </CSSTransition>\r\n          </TransitionGroup>\r\n        </div>\r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps,mapDispatchToProps)(Main));","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Dishes = (state = { isLoading: true,\r\n    errMess: null,\r\n    dishes:[]}, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_DISHES:\r\n            return {...state, isLoading: false, errMess: null, dishes: action.payload};\r\n\r\n        case ActionTypes.DISHES_LOADING:\r\n            return {...state, isLoading: true, errMess: null, dishes: []}\r\n\r\n        case ActionTypes.DISHES_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload};\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};","import * as ActionTypes from './ActionTypes';\r\nexport const Comments = (state = { errMess: null, comments:[]}, action) => {\r\n  switch (action.type) {\r\n    case ActionTypes.ADD_COMMENTS:\r\n      return {...state, errMess: null, comments: action.payload};\r\n\r\n    case ActionTypes.COMMENTS_FAILED:\r\n      return {...state, errMess: action.payload};\r\n\r\n    case ActionTypes.ADD_COMMENT:\r\n        var comment = action.payload;\r\n        return { ...state, comments: state.comments.concat(comment)};\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Promotions = (state  = { isLoading: true,\r\n                                        errMess: null,\r\n                                        promotions:[]}, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_PROMOS:\r\n        return {...state, isLoading: false, errMess: null, promotions: action.payload};\r\n\r\n        case ActionTypes.PROMOS_LOADING:\r\n            return {...state, isLoading: true, errMess: null, promotions: []}\r\n\r\n        case ActionTypes.PROMOS_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload};\r\n\r\n        default:\r\n          return state;\r\n      }\r\n};","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Leaders = (state  = { isLoading: true,\r\n                                        errMess: null,\r\n                                        leaders:[]}, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_LEADERS:\r\n        return {...state, isLoading: false, errMess: null, leaders: action.payload};\r\n\r\n        case ActionTypes.LEADERS_LOADING:\r\n            return {...state, isLoading: true, errMess: null, leaders: []}\r\n\r\n        case ActionTypes.LEADERS_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload};\r\n\r\n        default:\r\n          return state;\r\n      }\r\n};","export const InitialFeedback = {\r\n    firstname: '',\r\n    lastname: '',\r\n    telnum: '',\r\n    email: '',\r\n    agree: false,\r\n    contactType: 'Tel.',\r\n    message: ''\r\n};","import React, { Component } from 'react';\nimport Main from './components/MainComponent';\nimport '../src/App.css';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { ConfigureStore } from './redux/configureStore';\n\nconst store = ConfigureStore();\n\nclass App extends Component {\n render() {\n  return (\n<Provider store={store}>\n    <BrowserRouter>\n    <div className=\"App\">\n      <Main />\n    </div>\n  </BrowserRouter>\n  </Provider>\n\n  )\n}\n}\nexport default App;\n","import {createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport logger from 'redux-logger';\r\nimport {Dishes} from './dishes';\r\nimport{Comments} from './comments';\r\nimport{Promotions} from './promotions';\r\nimport {Leaders} from './leaders';\r\nimport { createForms } from 'react-redux-form';\r\nimport { InitialFeedback } from './forms';\r\n\r\nexport const ConfigureStore = () => {\r\n    const store = createStore(\r\n        combineReducers({\r\n            dishes: Dishes,\r\n            comments: Comments,\r\n            promotions: Promotions,\r\n            leaders: Leaders,\r\n            ...createForms({\r\n                feedback: InitialFeedback\r\n            })\r\n        }),\r\n        applyMiddleware(thunk, logger)\r\n    );\r\n\r\n    return store;\r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport { Navbar } from 'reactstrap';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'font-awesome/css/font-awesome.css';\nimport 'bootstrap-social/bootstrap-social.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}